{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(semantic.dashboard)\nlibrary(shiny.semantic)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(leaflet)\n\nui <- dashboardPage(\n    dashboardHeader(color = \"blue\", title = \"Dashboard Demo\", inverted = TRUE),\n    dashboardSidebar(\n        color = \"teal\",\n        sidebarMenu(\n            menuItem(tabName = \"main\", \"Main\", icon = icon(\"car\")),\n            menuItem(tabName = \"data\", \"Data\", icon = icon(\"table\")),\n            menuItem(tabName = \"map\", \"Map\", icon = icon(\"globe\"))\n        )\n    ),\n    dashboardBody(\n        tabItems(\n            selected = 1,\n            tabItem(\n                tabName = \"main\",\n                fluidRow(\n                    box(width = 8,\n                        title = \"Graph 1\",\n                        color = \"green\", ribbon = TRUE, title_side = \"top right\",\n                        column(8,\n                               plotOutput(\"boxplot1\")\n                        )\n                    ),\n                    box(width = 8,\n                        title = \"Graph 2\",\n                        color = \"red\", ribbon = TRUE, title_side = \"top right\",\n                        column(width = 8,\n                               plotlyOutput(\"dotplot1\")\n                        )\n                    )\n                )\n            ),\n            tabItem(\n                tabName = \"data\",\n                fluidRow(\n                    dataTableOutput(\"carstable\")\n                )\n            ),\n            tabItem(\n                tabName = \"map\",\n                \n                fluidRow(\n                    box(width = 4, title = \"Map Control\",\n                        dropdown(\"dd1\", \n                                 choices = c(\"ALL\", \"DRUNK\", \"BURGLARY\"), \n                                 choices_value = c(\"ALL\", \"DRUNK\", \"BURGLARY\"), \n                                 default_text = \"Select\", \n                                 value = \"ALL\")\n                    ),\n                    box(width = 12,\n                        title = \"Arlington Crime\",\n                        color = \"red\", ribbon = TRUE,\n                        leafletOutput(\"map\")\n                    )\n                )\n            )\n        )\n    ), theme = \"cerulean\"\n)\n\nserver <- shinyServer(function(input, output, session) {\n    library(data.table)\n    library(sf)\n    # ggplot\n    data(\"mtcars\")\n    mtcars$am <- factor(mtcars$am,levels=c(0,1),\n                        labels=c(\"Automatic\",\"Manual\"))\n    output$boxplot1 <- renderPlot({\n        ggplot(mtcars, aes(x = am, y = mpg)) +\n            geom_boxplot(fill = semantic_palette[[\"green\"]]) + \n            xlab(\"gearbox\") + ylab(\"Miles per gallon\")\n    })\n    \n    # plotly\n    colscale <- c(semantic_palette[[\"red\"]], semantic_palette[[\"green\"]], semantic_palette[[\"blue\"]])\n    output$dotplot1 <- renderPlotly({\n        ggplotly(ggplot(mtcars, aes(wt, mpg))\n                 + geom_point(aes(colour=factor(cyl), size = qsec))\n                 + scale_colour_manual(values = colscale)\n        )\n    })\n    \n    # DT\n    output$carstable <- renderDataTable(mtcars)\n    \n    # leaflet\n    crime_data <- fread(\"crime data.csv\")\n    \n    observeEvent(input$dd1, {\n        data <- crime_data[description %like% input$dd1,]\n        if (input$dd1 != \"ALL\") data <- data[description %like% input$dd1,]\n\n        sf <- st_as_sf(data, coords = c(\"longitude\", \"latitude\"))\n        \n        m <- leaflet(data = sf) %>% addTiles() %>%\n            addCircleMarkers(\n                popup = ~ as.character(location),\n                label = ~ as.character(description),\n                radius = 4,\n                clusterOptions = markerClusterOptions()\n            )\n        \n        output$map <- renderLeaflet(m)\n    })\n})\n\nshinyApp(ui, server)\n",
    "created" : 1572889305408.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1792120204",
    "id" : "381FCC48",
    "lastKnownWriteTime" : 1568398706,
    "last_content_update" : 1568398706,
    "path" : "~/git/training/14_data_presentation/02_r-shiny-dashboards/app8.R",
    "project_path" : "app8.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}